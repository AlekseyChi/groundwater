# Generated by Django 4.1.10 on 2023-08-22 02:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("darcy_app", "0007_alter_documentspath_path"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalWellsLithology",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "bot_elev",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина до, м",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "caverns",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Кавернозность",
                    ),
                ),
                (
                    "cement",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Состав цемента",
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Цвет",
                    ),
                ),
                (
                    "composition",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Гранулометрический состав",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "fracture",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Трещиноватость",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "inclusions",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Включения",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mineral",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Минеральный состав",
                    ),
                ),
                (
                    "rock",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Порода",
                    ),
                ),
                (
                    "secondary_change",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Вторичные изменения",
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Структура",
                    ),
                ),
                (
                    "weathering",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Степень выветрелости",
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Литологическая колонка",
                "verbose_name_plural": "historical Литологические колонки",
                "db_table": "wells_lithology_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="WellsLithology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "bot_elev",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина до, м",
                    ),
                ),
                (
                    "caverns",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="caverns",
                        to="darcy_app.dictentities",
                        verbose_name="Кавернозность",
                    ),
                ),
                (
                    "cement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="cement",
                        to="darcy_app.dictentities",
                        verbose_name="Состав цемента",
                    ),
                ),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="color",
                        to="darcy_app.dictentities",
                        verbose_name="Цвет",
                    ),
                ),
                (
                    "composition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="composition",
                        to="darcy_app.dictentities",
                        verbose_name="Гранулометрический состав",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "fracture",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="fracture",
                        to="darcy_app.dictentities",
                        verbose_name="Трещиноватость",
                    ),
                ),
                (
                    "inclusions",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="inclusions",
                        to="darcy_app.dictentities",
                        verbose_name="Включения",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "mineral",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="mineral_cmspt",
                        to="darcy_app.dictentities",
                        verbose_name="Минеральный состав",
                    ),
                ),
                (
                    "rock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="rock",
                        to="darcy_app.dictentities",
                        verbose_name="Порода",
                    ),
                ),
                (
                    "secondary_change",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="secondary_change",
                        to="darcy_app.dictentities",
                        verbose_name="Вторичные изменения",
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="structure",
                        to="darcy_app.dictentities",
                        verbose_name="Структура",
                    ),
                ),
                (
                    "weathering",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="weathering",
                        to="darcy_app.dictentities",
                        verbose_name="Степень выветрелости",
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "Литологическая колонка",
                "verbose_name_plural": "Литологические колонки",
                "db_table": "wells_lithology",
                "ordering": ("bot_elev",),
                "unique_together": {("well", "rock", "bot_elev")},
            },
        ),
    ]

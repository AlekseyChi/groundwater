# Generated by Django 4.0.7 on 2022-09-16 17:02

from django.conf import settings
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gwm', '0009_historicalpoi_typo_poi_typo_alter_historicalpoi_geom_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='historicalobservation',
            name='location',
        ),
        migrations.RemoveField(
            model_name='observation',
            name='location',
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='econ_dppog',
            field=models.BooleanField(blank=True, default=False, verbose_name='дополнение к предложению?'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='econ_osv',
            field=models.BooleanField(blank=True, default=False, verbose_name='оборотно-сальдовая ведомость?'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='econ_ppog',
            field=models.BooleanField(blank=True, default=False, verbose_name='предложения по обоснованию границ?'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='econ_pts',
            field=models.BooleanField(blank=True, default=False, verbose_name='перечень тех.средств?'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='econ_vbu',
            field=models.BooleanField(blank=True, default=False, verbose_name='выписка БУ?'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='econ_ztopo',
            field=models.BooleanField(blank=True, default=False, verbose_name='записка к топоплану?'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='note',
            field=models.TextField(blank=True, null=True, verbose_name='примечание'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='typo',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gwm.spr_type', verbose_name='тип обследования'),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='vzu',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gwm.spr_vzu', verbose_name='ВЗУ'),
        ),
        migrations.AddField(
            model_name='observation',
            name='econ_dppog',
            field=models.BooleanField(blank=True, default=False, verbose_name='дополнение к предложению?'),
        ),
        migrations.AddField(
            model_name='observation',
            name='econ_osv',
            field=models.BooleanField(blank=True, default=False, verbose_name='оборотно-сальдовая ведомость?'),
        ),
        migrations.AddField(
            model_name='observation',
            name='econ_ppog',
            field=models.BooleanField(blank=True, default=False, verbose_name='предложения по обоснованию границ?'),
        ),
        migrations.AddField(
            model_name='observation',
            name='econ_pts',
            field=models.BooleanField(blank=True, default=False, verbose_name='перечень тех.средств?'),
        ),
        migrations.AddField(
            model_name='observation',
            name='econ_vbu',
            field=models.BooleanField(blank=True, default=False, verbose_name='выписка БУ?'),
        ),
        migrations.AddField(
            model_name='observation',
            name='econ_ztopo',
            field=models.BooleanField(blank=True, default=False, verbose_name='записка к топоплану?'),
        ),
        migrations.AddField(
            model_name='observation',
            name='note',
            field=models.TextField(blank=True, null=True, verbose_name='примечание'),
        ),
        migrations.AddField(
            model_name='observation',
            name='typo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gwm.spr_type', verbose_name='тип обследования'),
        ),
        migrations.AddField(
            model_name='observation',
            name='vzu',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gwm.spr_vzu', verbose_name='ВЗУ'),
        ),
        migrations.AlterField(
            model_name='historicalpoi',
            name='nom',
            field=models.CharField(help_text='указать номер скважины', max_length=255, verbose_name='номер'),
        ),
        migrations.AlterField(
            model_name='poi',
            name='nom',
            field=models.CharField(help_text='указать номер скважины', max_length=255, verbose_name='номер'),
        ),
        migrations.CreateModel(
            name='spr_datasource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='указать источник данных', max_length=255, verbose_name='источник')),
                ('extra', models.JSONField(blank=True, help_text='неструктуированные данные', null=True, verbose_name='extra')),
                ('remote_addr', models.GenericIPAddressField(blank=True, editable=False, help_text='IP адрес последнего отредактировавшего (заполняется автоматически)', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Дата-время создания (заполняется автоматически)', null=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(blank=True, editable=False, help_text='Дата-время последнего редактирования (заполняется автоматически)', null=True, verbose_name='Отредактирована')),
                ('author', models.CharField(default='ufo', editable=False, help_text='Пользователь создавший запись (заполняется автоматически)', max_length=255, verbose_name='Кто создал')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Если вы не знаете что это - значит оно вам не надо', verbose_name='UUID')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(editable=False, null=True)),
                ('lastuser', models.ForeignKey(blank=True, editable=False, help_text='Последний пользователь, редактировавший запись (заполняется автоматически)', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Справочник Источник данных',
                'verbose_name_plural': 'Справочник Источник данных',
            },
        ),
        migrations.CreateModel(
            name='Historicalspr_datasource',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(help_text='указать источник данных', max_length=255, verbose_name='источник')),
                ('extra', models.JSONField(blank=True, help_text='неструктуированные данные', null=True, verbose_name='extra')),
                ('remote_addr', models.GenericIPAddressField(blank=True, editable=False, help_text='IP адрес последнего отредактировавшего (заполняется автоматически)', null=True)),
                ('created', models.DateTimeField(blank=True, editable=False, help_text='Дата-время создания (заполняется автоматически)', null=True, verbose_name='Создана')),
                ('modified', models.DateTimeField(blank=True, editable=False, help_text='Дата-время последнего редактирования (заполняется автоматически)', null=True, verbose_name='Отредактирована')),
                ('author', models.CharField(default='ufo', editable=False, help_text='Пользователь создавший запись (заполняется автоматически)', max_length=255, verbose_name='Кто создал')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Если вы не знаете что это - значит оно вам не надо', verbose_name='UUID')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('lastuser', models.ForeignKey(blank=True, db_constraint=False, editable=False, help_text='Последний пользователь, редактировавший запись (заполняется автоматически)', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Справочник Источник данных',
                'verbose_name_plural': 'historical Справочник Источник данных',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='historicalobservation',
            name='datasource',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gwm.spr_datasource', verbose_name='источник данных'),
        ),
        migrations.AddField(
            model_name='observation',
            name='datasource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gwm.spr_datasource', verbose_name='источник данных'),
        ),
    ]

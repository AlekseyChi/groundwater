# Generated by Django 4.1.9 on 2023-06-05 09:56

import darcy_app.models
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AquiferCodes",
            fields=[
                ("aquifer_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "aquifer_name",
                    models.CharField(
                        max_length=150,
                        unique=True,
                        verbose_name="Название гидрогеологического подразделения",
                    ),
                ),
                (
                    "aquifer_index",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Индекс геологического подразделения",
                    ),
                ),
            ],
            options={
                "verbose_name": "Гидрогеологическое подразделение",
                "verbose_name_plural": "Словарь гидрогеологических подразделений",
                "db_table": "aquifer_codes",
            },
        ),
        migrations.CreateModel(
            name="ChemCodes",
            fields=[
                ("chem_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "chem_name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Наименование показателя",
                    ),
                ),
                (
                    "chem_formula",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        verbose_name="Химическая формула показателя",
                    ),
                ),
                (
                    "chem_pdk",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=10,
                        null=True,
                        verbose_name="ПДК",
                    ),
                ),
                (
                    "chem_measure",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        verbose_name="Единицы измерения",
                    ),
                ),
            ],
            options={
                "verbose_name": "Показатель хим. состава",
                "verbose_name_plural": "Словарь показателей хим. состава",
                "db_table": "chem_codes",
                "ordering": ("chem_name",),
            },
        ),
        migrations.CreateModel(
            name="DictEntities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("name", models.CharField(max_length=250)),
            ],
            options={
                "verbose_name": "Словарь сущностей",
                "verbose_name_plural": "Словарь сущностей",
                "db_table": "dict_entities",
            },
        ),
        migrations.CreateModel(
            name="DictPump",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "name",
                    models.CharField(max_length=250, verbose_name="Название насоса"),
                ),
                ("brand", models.CharField(max_length=250, verbose_name="Марка")),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Словарь насосов",
                "verbose_name_plural": "Словарь насосов",
                "db_table": "dict_pump",
            },
        ),
        migrations.CreateModel(
            name="Documents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "name",
                    models.CharField(
                        max_length=1200, verbose_name="Название документа"
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата создания документа"
                    ),
                ),
                (
                    "creation_place",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Место создания документа",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "links",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="darcy_app.documents",
                        verbose_name="Связанные документы",
                    ),
                ),
                (
                    "org_customer",
                    models.ForeignKey(
                        blank=True,
                        db_column="org_customer",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="org_customer",
                        to="darcy_app.dictentities",
                        verbose_name="Организация-заказчик",
                    ),
                ),
                (
                    "org_executor",
                    models.ForeignKey(
                        blank=True,
                        db_column="org_executor",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="org_executor",
                        to="darcy_app.dictentities",
                        verbose_name="Организация-исполнитель",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        db_column="doc_source",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="doc_source",
                        to="darcy_app.dictentities",
                        verbose_name="Источник поступления",
                    ),
                ),
                (
                    "typo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="doc_type",
                        to="darcy_app.dictentities",
                        verbose_name="Тип документа",
                    ),
                ),
            ],
            options={
                "verbose_name": "Документ",
                "verbose_name_plural": "Документация",
                "db_table": "documents",
                "ordering": ("-creation_date",),
                "unique_together": {("content_type", "object_id")},
            },
        ),
        migrations.CreateModel(
            name="Fields",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "field_name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Название месторождения",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True,
                        help_text="WGS84",
                        null=True,
                        srid=4326,
                        verbose_name="Геометрия",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Месторождение подземных вод",
                "verbose_name_plural": "Месторождения подземных вод",
                "db_table": "fields",
                "ordering": ("field_name",),
            },
        ),
        migrations.CreateModel(
            name="Intakes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "intake_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Название водозабора",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True,
                        help_text="WGS84",
                        null=True,
                        srid=4326,
                        verbose_name="Геометрия",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Водозабор",
                "verbose_name_plural": "Водозаборы",
                "db_table": "intakes",
                "ordering": ("intake_name",),
            },
        ),
        migrations.CreateModel(
            name="Wells",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Название скважины",
                    ),
                ),
                (
                    "head",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        null=True,
                        verbose_name="Абсолютная отметка устья, м",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True,
                        help_text="WGS84",
                        null=True,
                        srid=4326,
                        verbose_name="Геометрия",
                    ),
                ),
                (
                    "field",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="darcy_app.fields",
                        verbose_name="Месторождение",
                    ),
                ),
                (
                    "intake",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="darcy_app.intakes",
                        verbose_name="Название водозабора",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "moved",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="darcy_app.dictentities",
                        verbose_name="Точность местоположения",
                    ),
                ),
                (
                    "typo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="well_type",
                        to="darcy_app.dictentities",
                        verbose_name="Тип скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "Скважина",
                "verbose_name_plural": "Скважины",
                "db_table": "wells",
            },
        ),
        migrations.CreateModel(
            name="WellsEfw",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateTimeField(verbose_name="Дата и время опыта")),
                (
                    "pump_depth",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        null=True,
                        verbose_name="Глубина загрузки водоподъемного оборудования, м",
                    ),
                ),
                ("pump_time", models.TimeField(verbose_name="Продолжительность опыта")),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "method_measure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="method_measure",
                        to="darcy_app.dictentities",
                        verbose_name="Метод замера дебита",
                    ),
                ),
                (
                    "pump_type",
                    models.ForeignKey(
                        db_column="pump_type",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="pump_type",
                        to="darcy_app.dictpump",
                        verbose_name="Тип водоподъемного оборудования",
                    ),
                ),
                (
                    "type_efw",
                    models.ForeignKey(
                        db_column="type_efw",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="type_efw",
                        to="darcy_app.dictentities",
                        verbose_name="Тип опыта",
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "ОФР",
                "verbose_name_plural": "Опытно-фильтрационные работы",
                "db_table": "wells_efw",
                "ordering": ("-date", "well"),
                "unique_together": {("well", "date")},
            },
        ),
        migrations.CreateModel(
            name="HistoricalWellsWaterDepth",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "type_level",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Статический"
                    ),
                ),
                (
                    "water_depth",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина подземных вод, м",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Замер УГВ",
                "verbose_name_plural": "historical Замеры УГВ",
                "db_table": "wells_water_depth_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsSample",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateField(verbose_name="Дата опробования")),
                ("name", models.CharField(max_length=150, verbose_name="Номер пробы")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Хим. опробование",
                "verbose_name_plural": "historical Хим. опробования",
                "db_table": "wells_sample_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsRegime",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateTimeField(verbose_name="Дата и время замера")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Режимное наблюдение",
                "verbose_name_plural": "historical Режимные наблюдения",
                "db_table": "wells_regime_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsRate",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="до трех знаков после запятой",
                        max_digits=7,
                        verbose_name="Дебит л/с",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Замер дебита",
                "verbose_name_plural": "historical Замеры дебита",
                "db_table": "wells_rate_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsEfw",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateTimeField(verbose_name="Дата и время опыта")),
                (
                    "pump_depth",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        null=True,
                        verbose_name="Глубина загрузки водоподъемного оборудования, м",
                    ),
                ),
                ("pump_time", models.TimeField(verbose_name="Продолжительность опыта")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "method_measure",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Метод замера дебита",
                    ),
                ),
                (
                    "pump_type",
                    models.ForeignKey(
                        blank=True,
                        db_column="pump_type",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictpump",
                        verbose_name="Тип водоподъемного оборудования",
                    ),
                ),
                (
                    "type_efw",
                    models.ForeignKey(
                        blank=True,
                        db_column="type_efw",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Тип опыта",
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical ОФР",
                "verbose_name_plural": "historical Опытно-фильтрационные работы",
                "db_table": "wells_efw_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsDepth",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "depth",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина скважины, м",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Глубина скважины",
                "verbose_name_plural": "historical Глубина скважин",
                "db_table": "wells_depth_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsDepression",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "time_measure",
                    models.TimeField(
                        help_text="время от начала опыта", verbose_name="Время замера"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "efw_id",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.wellsefw",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Журнал ОФР",
                "verbose_name_plural": "historical Журнал ОФР",
                "db_table": "wells_depression_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsConstruction",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateField(verbose_name="Дата установки")),
                ("diameter", models.IntegerField(verbose_name="Диаметр")),
                (
                    "depth_from",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Глубина от, м"
                    ),
                ),
                (
                    "depth_till",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Глубина до, м"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "construction_type",
                    models.ForeignKey(
                        blank=True,
                        db_column="construction_type",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Тип конструкции",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Конструкция скважины",
                "verbose_name_plural": "historical Конструкция скважины",
                "db_table": "wells_construction_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsCondition",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("object_id", models.PositiveIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "condition",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Тех. состояние",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Тех.состояние скважины",
                "verbose_name_plural": "historical Тех.состояние скважин",
                "db_table": "wells_condition_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsChem",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "chem_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        help_text="до пяти знаков после запятой",
                        max_digits=15,
                        null=True,
                        verbose_name="Значение показателя",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parameter",
                    models.ForeignKey(
                        blank=True,
                        db_column="parameter",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.chemcodes",
                        verbose_name="Хим. показатель",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Гидрогеохимия",
                "verbose_name_plural": "historical Гидрогеохимия",
                "db_table": "wells_chem_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWellsAquifers",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "bot_elev",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина подошвы горизонта, м",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "aquifer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.aquifercodes",
                        verbose_name="Гидрогеологическое подразделение",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Гидрогеологическая колонка",
                "verbose_name_plural": "historical Гидрогеологические колонки",
                "db_table": "wells_aquifers_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalWells",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Название скважины",
                    ),
                ),
                (
                    "head",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        null=True,
                        verbose_name="Абсолютная отметка устья, м",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True,
                        help_text="WGS84",
                        null=True,
                        srid=4326,
                        verbose_name="Геометрия",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "field",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.fields",
                        verbose_name="Месторождение",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "intake",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.intakes",
                        verbose_name="Название водозабора",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "moved",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Точность местоположения",
                    ),
                ),
                (
                    "typo",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Тип скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Скважина",
                "verbose_name_plural": "historical Скважины",
                "db_table": "wells_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIntakes",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "intake_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Название водозабора",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True,
                        help_text="WGS84",
                        null=True,
                        srid=4326,
                        verbose_name="Геометрия",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Водозабор",
                "verbose_name_plural": "historical Водозаборы",
                "db_table": "intakes_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFields",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "field_name",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        verbose_name="Название месторождения",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.MultiPolygonField(
                        blank=True,
                        help_text="WGS84",
                        null=True,
                        srid=4326,
                        verbose_name="Геометрия",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Месторождение подземных вод",
                "verbose_name_plural": "historical Месторождения подземных вод",
                "db_table": "fields_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDocumentsPath",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "path",
                    models.TextField(max_length=100, verbose_name="Файл документа"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.documents",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Путь к документу",
                "verbose_name_plural": "historical Пути к документам",
                "db_table": "documents_path_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDocuments",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "name",
                    models.CharField(
                        max_length=1200, verbose_name="Название документа"
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата создания документа"
                    ),
                ),
                (
                    "creation_place",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Место создания документа",
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "org_customer",
                    models.ForeignKey(
                        blank=True,
                        db_column="org_customer",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Организация-заказчик",
                    ),
                ),
                (
                    "org_executor",
                    models.ForeignKey(
                        blank=True,
                        db_column="org_executor",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Организация-исполнитель",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        db_column="doc_source",
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Источник поступления",
                    ),
                ),
                (
                    "typo",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Тип документа",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Документ",
                "verbose_name_plural": "historical Документация",
                "db_table": "documents_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalBalance",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "a",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="A, м3",
                    ),
                ),
                (
                    "b",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="B, м3",
                    ),
                ),
                (
                    "c1",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="C1, м3",
                    ),
                ),
                (
                    "c2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="C2, м3",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "aquifer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.aquifercodes",
                        verbose_name="Водоносный горизонт",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "typo",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="darcy_app.dictentities",
                        verbose_name="Тип подземных вод",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Утвержденные запасы",
                "verbose_name_plural": "historical Утвержденные запасы",
                "db_table": "fields_balance_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAttachments",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("img", models.TextField(max_length=100, verbose_name="Вложение")),
                ("object_id", models.PositiveIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Вложение",
                "verbose_name_plural": "historical Вложения",
                "db_table": "attachments_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Entities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("name", models.CharField(max_length=150, unique=True)),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Сущность",
                "verbose_name_plural": "Сущности",
                "db_table": "entities",
            },
        ),
        migrations.CreateModel(
            name="DocumentsPath",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "path",
                    models.FileField(
                        upload_to=darcy_app.models.user_directory_path,
                        verbose_name="Файл документа",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.documents",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Путь к документу",
                "verbose_name_plural": "Пути к документам",
                "db_table": "documents_path",
            },
        ),
        migrations.AddField(
            model_name="dictentities",
            name="entity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="darcy_app.entities"
            ),
        ),
        migrations.AddField(
            model_name="dictentities",
            name="last_user",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Balance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "a",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="A, м3",
                    ),
                ),
                (
                    "b",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="B, м3",
                    ),
                ),
                (
                    "c1",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="C1, м3",
                    ),
                ),
                (
                    "c2",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=9,
                        null=True,
                        verbose_name="C2, м3",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "aquifer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.aquifercodes",
                        verbose_name="Водоносный горизонт",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "typo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mineral",
                        to="darcy_app.dictentities",
                        verbose_name="Тип подземных вод",
                    ),
                ),
            ],
            options={
                "verbose_name": "Утвержденные запасы",
                "verbose_name_plural": "Утвержденные запасы",
                "db_table": "fields_balance",
            },
        ),
        migrations.CreateModel(
            name="Attachments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "img",
                    models.ImageField(upload_to="images/", verbose_name="Вложение"),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Вложение",
                "verbose_name_plural": "Вложения",
                "db_table": "attachments",
            },
        ),
        migrations.CreateModel(
            name="WellsWaterDepth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "type_level",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Статический"
                    ),
                ),
                (
                    "water_depth",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина подземных вод, м",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Замер УГВ",
                "verbose_name_plural": "Замеры УГВ",
                "db_table": "wells_water_depth",
                "unique_together": {("object_id", "content_type")},
            },
        ),
        migrations.CreateModel(
            name="WellsSample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateField(verbose_name="Дата опробования")),
                ("name", models.CharField(max_length=150, verbose_name="Номер пробы")),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "Хим. опробование",
                "verbose_name_plural": "Хим. опробования",
                "db_table": "wells_sample",
                "ordering": ("-date", "well"),
                "unique_together": {("well", "date")},
            },
        ),
        migrations.CreateModel(
            name="WellsRegime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateTimeField(verbose_name="Дата и время замера")),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "Режимное наблюдение",
                "verbose_name_plural": "Режимные наблюдения",
                "db_table": "wells_regime",
                "ordering": ("-date", "well"),
                "unique_together": {("well", "date")},
            },
        ),
        migrations.CreateModel(
            name="WellsRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="до трех знаков после запятой",
                        max_digits=7,
                        verbose_name="Дебит л/с",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Замер дебита",
                "verbose_name_plural": "Замеры дебита",
                "db_table": "wells_rate",
                "unique_together": {("object_id", "content_type")},
            },
        ),
        migrations.CreateModel(
            name="WellsDepth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "depth",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина скважины, м",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Глубина скважины",
                "verbose_name_plural": "Глубина скважин",
                "db_table": "wells_depth",
                "unique_together": {("object_id", "content_type")},
            },
        ),
        migrations.CreateModel(
            name="WellsDepression",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "time_measure",
                    models.TimeField(
                        help_text="время от начала опыта", verbose_name="Время замера"
                    ),
                ),
                (
                    "efw_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wellsefw",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Журнал ОФР",
                "verbose_name_plural": "Журнал ОФР",
                "db_table": "wells_depression",
                "ordering": ("time_measure",),
                "unique_together": {("efw_id", "time_measure")},
            },
        ),
        migrations.CreateModel(
            name="WellsConstruction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("date", models.DateField(verbose_name="Дата установки")),
                ("diameter", models.IntegerField(verbose_name="Диаметр")),
                (
                    "depth_from",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Глубина от, м"
                    ),
                ),
                (
                    "depth_till",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Глубина до, м"
                    ),
                ),
                (
                    "construction_type",
                    models.ForeignKey(
                        db_column="construction_type",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="darcy_app.dictentities",
                        verbose_name="Тип конструкции",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "Конструкция скважины",
                "verbose_name_plural": "Конструкция скважины",
                "db_table": "wells_construction",
                "ordering": ("depth_from",),
                "unique_together": {
                    (
                        "well",
                        "depth_from",
                        "construction_type",
                        "depth_till",
                        "diameter",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="WellsCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("object_id", models.PositiveIntegerField()),
                (
                    "condition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="darcy_app.dictentities",
                        verbose_name="Тех. состояние",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Тех.состояние скважины",
                "verbose_name_plural": "Тех.состояние скважин",
                "db_table": "wells_condition",
                "unique_together": {("object_id", "content_type")},
            },
        ),
        migrations.CreateModel(
            name="WellsChem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "chem_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        help_text="до пяти знаков после запятой",
                        max_digits=15,
                        null=True,
                        verbose_name="Значение показателя",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parameter",
                    models.ForeignKey(
                        db_column="parameter",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="parameter",
                        to="darcy_app.chemcodes",
                        verbose_name="Хим. показатель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Гидрогеохимия",
                "verbose_name_plural": "Гидрогеохимия",
                "db_table": "wells_chem",
                "ordering": ("parameter__chem_name",),
                "unique_together": {("parameter", "object_id", "content_type")},
            },
        ),
        migrations.CreateModel(
            name="WellsAquiferUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "aquifer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="darcy_app.aquifercodes",
                        verbose_name="Водоносный горизонт",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wells",
                        verbose_name="Скважина",
                    ),
                ),
            ],
            options={
                "verbose_name": "Целевой водоносный горизонт скважины",
                "verbose_name_plural": "Целевые водоносные горизонты скважин",
                "db_table": "wells_aquifer_usage",
                "unique_together": {("well", "aquifer")},
            },
        ),
        migrations.CreateModel(
            name="WellsAquifers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "modified",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="ufo",
                        editable=False,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "remote_addr",
                    models.GenericIPAddressField(blank=True, editable=False, null=True),
                ),
                ("extra", models.JSONField(blank=True, editable=False, null=True)),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "bot_elev",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="до двух знаков после запятой",
                        max_digits=6,
                        verbose_name="Глубина подошвы горизонта, м",
                    ),
                ),
                (
                    "aquifer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="darcy_app.aquifercodes",
                        verbose_name="Гидрогеологическое подразделение",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.documents",
                        verbose_name="Документ",
                    ),
                ),
                (
                    "last_user",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "well",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="darcy_app.wells",
                        verbose_name="Номер скважины",
                    ),
                ),
            ],
            options={
                "verbose_name": "Гидрогеологическая колонка",
                "verbose_name_plural": "Гидрогеологические колонки",
                "db_table": "wells_aquifers",
                "ordering": ("bot_elev",),
                "unique_together": {("well", "aquifer")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="dictentities",
            unique_together={("name", "entity")},
        ),
    ]
